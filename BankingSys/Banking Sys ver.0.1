#include <iostream>

using namespace std;
const int NAME_LEN = 20;

typedef struct
{
	int accID;		      // 계좌번호
	char cusName[NAME_LEN];       // 예금주명
	int balance;	       	      // 계좌잔액
}Account;

enum label {MAKE=1, DEPOSIT, WITHDRAW, INQUIRE, EXIT};
Account acc[100] = { 0 }; //  Account 저장을 위한 배열
int accNum = 0;			  // 저장된 Account 수

BankAccount acc[2] = { 0 };
int len = sizeof(acc) / sizeof(acc[0]);

void showMenu(void);
void MakeAccount(void);
void DepositMoney(void);
void WithdrawMoney(void);
void ShowAllAccInfo(void);

int main(void)
{
	int choice;

	while (1)
	{
		showMenu();
		cout << "선택: ";
		cin >> choice;
		cout << endl;
		switch (choice)
		{
		case 1:
			MakeAccount();
			break;
		case 2:
			DepositMoney();
			break;
		case 3:
			WithdrawMoney();
			break;
		case 4:
			ShowAllAccInfo();
			break;
		case 5:
			exit(1);
		default:
			cout << "잘못된 입력입니다 다시 입력하세요" << endl;
		}

	}
	return 0;
}
void showMenu(void)
{
	cout << "AA은행 온라인 서비스를 이용해주셔서 감사합니다." << endl;
	cout << endl;
	cout << "=======[업무]=======" << endl;
	cout << "1. 계좌 개설" << endl;
	cout << "2. 입금" << endl;
	cout << "3. 출금" << endl;
	cout << "4. 잔액 조회" << endl;
	cout << "5. 프로그램 종료" << endl;
	cout << "=======[업무]=======" << endl;
}
void MakeAccount(void)
{
	int id;
	char name[20];
	int balance;

	for (int i = 0; i < len; i++)
	{
		if (acc[i].accID != 0)
		{
			continue;
		}
		cout << "=============== [계좌 개설] ===============" << endl;
		cout << "계좌 번호: ";
		cin >> id;
		acc[i].accID = id;

		cout << "예금주: ";
		cin >> name;
		strcpy_s(acc[i].cusName, name);

		cout << "예금액: ";
		cin >> balance;
		acc[i].balance = balance;

		cout << "계좌 개설 완료." << endl;
	}
	cout << "=============== [계좌 개설] ===============" << endl;
	cout << endl;
}
void DepositMoney(void) // 없는 계좌를 넣으면 없다고 안내
{
	cout << "=============[입금]============" << endl;
	int id, deposit;
	cout << "계좌 번호: ";
	cin >> id;
	cout << "입금액: ";
	cin >> deposit;

	for (int i = 0; i < len; i++)
	{
		if (acc[i].accID == id)
		{
			acc[i].balance += deposit;
			cout << "입금 완료! 현재 잔액: " << acc[i].balance << endl;
			cout << "=============[입금]============" << endl;
			return;
		}
	}
	cout << "존재하지 않는 계좌입니다." << endl;
}
void WithdrawMoney(void) // 소지금보다 많이 빠지면 잔액부족 안내
{
	int id, withdraw;
	cout << "=============[출금]============" << endl;
	cout << "계좌 번호: ";
	cin >> id;
	cout << "출금액: ";
	cin >> withdraw;

	for (int i = 0; i < len; i++)
	{
		if (acc[i].accID == id)
		{
			if (acc[i].balance < withdraw)
			{
				cout << "잔액 부족!" << endl;
				return;
			}
			acc[i].balance -= withdraw;
			cout << "출금 완료! 현재 잔액: " << acc[i].balance << endl;
			cout << "=============[출금]============" << endl;
			return;
		}
	}
	cout << "존재하지 않는 계좌입니다." << endl;
	
}
void ShowAllAccInfo(void)
{
	int i = 0;
	for (i = 0; i < len;i++)
	{
		cout << "고객명: " << acc[i].cusName << endl;
		cout << "계좌번호: " << acc[i].accID << endl;
		cout << "계좌잔액: " << acc[i].balance << endl;
		cout << endl;
	}
}

