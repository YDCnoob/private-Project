#include <stdio.h>
#include <stdlib.h>
#include <time.h>

typedef struct 
{
    char name[50];
    int level;
    int hp;
    int max_hp;
    int strength;
    int agility;
    int intelligence;
    int luck;
    int experience;
    int gold;
} Character;

typedef struct 
{
    char name[50];
    int hp;
    int damage;
    int gold_reward;
    int experience_reward;
} Monster;

void print_character_status(Character* character) 
{
    printf("\n--- 캐릭터 상태 ---\n");
    printf("이름: %s\n", character->name);
    printf("레벨: %d\n", character->level);
    printf("체력: %d/%d\n", character->hp, character->max_hp);
    printf("힘: %d, 민첩: %d, 지능: %d, 행운: %d\n", character->strength, character->agility, character->intelligence, character->luck);
    printf("경험치: %d\n", character->experience);
    printf("골드: %d\n", character->gold);
    printf("------------------\n");
}

int calculate_damage(Character* character) 
{
    // 힘, 민첩, 지능, 행운에 따른 데미지 계산
    int base_damage = 10; // 기본 데미지
    double damage_multiplier = 1.0;

    damage_multiplier += 1.2 * character->strength / 100.0;
    damage_multiplier += 0.8 * character->agility / 100.0;
    damage_multiplier += 0.4 * character->intelligence / 100.0;
    damage_multiplier += 1.1 * character->luck / 100.0;

    return (int)(base_damage * damage_multiplier);
}

void level_up(Character* character) 
{
    // 레벨업 시 랜덤으로 2개의 스탯 증가
    int stat_increase = rand() % 3;  // 0: strength, 1: agility, 2: intelligence, 3: luck
    int stat2_increase = rand() % 3;

    // 두 개의 스탯이 동일하지 않도록 처리
    while (stat2_increase == stat_increase) 
    {
        stat2_increase = rand() % 4;
    }

    switch (stat_increase) 
    {
    case 0: character->strength += 1; break;
    case 1: character->agility += 1; break;
    case 2: character->intelligence += 1; break;
    case 3: character->luck += 1; break;
    }

    switch (stat2_increase) 
    {
    case 0: character->strength += 1; break;
    case 1: character->agility += 1; break;
    case 2: character->intelligence += 1; break;
    case 3: character->luck += 1; break;
    }

    character->level++;
    character->experience = 0;
    printf("\n레벨업! %d 레벨에 도달했습니다.\n", character->level);
    print_character_status(character);
}

void fight_monster(Character* character, Monster* monster) 
{
    printf("%s과(와) 싸운다!\n", monster->name);
    int damage = calculate_damage(character);
    monster->hp -= damage;

    printf("당신은 %d의 데미지를 입혔습니다.\n", damage);

    if (monster->hp <= 0) 
    {
        printf("%s를 처치했습니다!\n", monster->name);
        character->experience += monster->experience_reward;
        character->gold += monster->gold_reward;

        // 경험치가 일정량 이상일 때 레벨업
        if (character->experience >= 100) 
        {
            level_up(character);
        }

        print_character_status(character);
    }
}

void reset_monsters(Monster* monsters, int difficulty) 
{
    // 몬스터의 강도를 증가시킨다 (체력과 데미지)
    for (int i = 0; i < 3; i++) {
        monsters[i].hp += difficulty * 20;
        monsters[i].damage += difficulty * 2;
    }
}

void reset_character(Character* character) 
{
    // 캐릭터 리셋 (새 캐릭터 생성)
    printf("\n새 캐릭터를 생성합니다.\n");
    character->level = 1;
    character->hp = 100;
    character->max_hp = 100;
    character->strength = 5;
    character->agility = 5;
    character->intelligence = 5;
    character->luck = 5;
    character->experience = 0;
    character->gold = 0;
}

int main() 
{
    srand(time(NULL));

    Character character;
    Monster monsters[3] = 
    {
        {"슬라임", 50, 5, 10, 10},
        {"고블린", 100, 10, 20, 20},
        {"드래곤", 200, 30, 50, 50}
    };

    printf("이름을 입력하세요: ");
    scanf("%s", character.name);
    reset_character(&character);

    int dungeon_level = 1;
    while (1) 
    {
        printf("\n%d층 던전으로 들어갑니다.\n", dungeon_level);

        for (int i = 0; i < 3; i++) 
        {
            fight_monster(&character, &monsters[i]);

            if (character.hp <= 0) 
            {
                printf("\n캐릭터가 죽었습니다. 게임을 리셋합니다.\n");
                reset_character(&character);
                break;
            }
        }

        // 던전 클리어 후 몬스터 강도 증가
        reset_monsters(monsters, dungeon_level);

        printf("\n%d층 던전 클리어! 다음 던전으로 이동합니다.\n", dungeon_level);
        dungeon_level++;

        // 계속 반복 (게임을 계속 하고 싶으면 무한 루프)
        char continue_game;
        printf("\n계속 하시겠습니까? (y/n): ");
        scanf("%c", &continue_game);

        if (continue_game == 'n' || continue_game == 'N') 
        {
            printf("\n게임을 종료합니다.\n");
            break;
        }
    }

    return 0;
}

